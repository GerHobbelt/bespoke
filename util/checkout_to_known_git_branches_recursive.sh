#! /bin/bash
#
# Generated by the utility: /c/Users/Ger/Projects/sites/library.visyond.gov/80/util/collect_git_checked_out_branch_recusively.sh --recursive
#
# Checkout each git repository to the given branch/commit or list them
#

mode=h;
while getopts ":hlc" opt ; do
  #echo opt+arg = "$opt$OPTARG"
  case "$opt$OPTARG" in
  l )
    mode=h;
    ;;

  c )
    mode=c;
    ;;

  r )
    mode=r;
    ;;

  * )
    cat <<EOH
checkout_to_known_git_branches_recursive.sh options

Options:

-h      : print this help 
-l      : LIST the branch/commit for each git repository (directory) registered in this script.
-c      : CHECKOUT each git repository to the BRANCH registered in this script.
-r      : CHECKOUT/REVERT each git repository to the COMMIT registered in this script.

Note:

Use the '-r' option to set each repository to an exact commit position, which is useful if,
for instance, you wish to reproduce this registered previous software state (which may 
represent a software release) which you wish to analyze/debug.

EOH
    exit 1;
    ;;
  esac
done

if test "$mode" = "h" ; then
  cat <<EOH

Git repository directory                    :: commit hash                         / branch name
--------------------------------------------::--------------------------------------------------
EOH
fi



# args: DIR COMMIT [BRANCH]
git_repo_checkout_branch() {
  if test "$mode" = "c" || test "$mode" = "r" ; then
    if test -d "$1" ; then
      pushd "$1"                                                               2> /dev/null  > /dev/null
      if test "$mode" = "c" ; then
        if test -n "$3" ; then
          # make sure the branch is created locally and is a tracking branch:
          git branch --track "$3" "remotes/origin/$3"                            2> /dev/null  > /dev/null
          git checkout "$3"
        else
          git checkout master
        fi
      else
        git checkout "$2"
      fi
      popd                                                                     2> /dev/null  > /dev/null
    fi
  else
    if test -d "$1" ; then
      printf "%-43s :: %s / %s\n" "$1" "$2" "$3"
    else
      printf "%-43s :: %s / %s\n" "[DIRECTORY DOES NOT EXIST!] $1" "$2" "$3"
    fi
  fi
}


#
# Make sure we switch to the utility directory as all the relative paths for the repositories
# are based off that path!
#
pushd $(dirname $0)                                                            2> /dev/null  > /dev/null



#
# The registered repositories:
#

git_repo_checkout_branch "../plugins/advanced" d2e81ee023fb9ea402907a152be5e89adcdce606 master
git_repo_checkout_branch "../plugins/backdrop" 4b7561102f65033f382d401f7d29902f7098d535 master
git_repo_checkout_branch "../plugins/blackout" e04eee3347b2e33a1d1b16aa58c19e45bd202244 master
git_repo_checkout_branch "../plugins/bullets" a8418d0911d2037cc47b17778089b24dd7fe1e8e master
git_repo_checkout_branch "../plugins/classes" ba130234f2b340376d58fcd188241996886c57f6 master
git_repo_checkout_branch "../plugins/cursor" c1633462f3dac8e171a008f8969207f776eaa9e0 master
git_repo_checkout_branch "../plugins/forms" 61bbd4722d2016a88745b9532a7c27c7ae71c891 master
git_repo_checkout_branch "../plugins/fullscreen" c8bb623ec8f6d7e6287598f1f8be245975b8f358 master
git_repo_checkout_branch "../plugins/fx" f84bc734fee12bf9e111663e6a1ffe4d05d22469 master
git_repo_checkout_branch "../plugins/hash" ab0222a3eb9b5c9207dab338ad3a8f2cf5220892 master
git_repo_checkout_branch "../plugins/hide" 65f5a1e489157f7ac3bd2a8d085480bf3292950a master
git_repo_checkout_branch "../plugins/history" eb3214369e3b883d55e3018d2a42b6009bd0aad8 master
git_repo_checkout_branch "../plugins/keys" be9a9d66ed99bf80983b0b8f2a66254159943016 master
git_repo_checkout_branch "../plugins/loop" c95dca19e4a735274733bccb3c47f2de3a72e703 master
git_repo_checkout_branch "../plugins/markdown" fa518c99647c81b97644feb4a7239210ca875e59 master
git_repo_checkout_branch "../plugins/math" 83bbc24526c1162993c1abe3eb3e5d7f71a4a2a5 master
git_repo_checkout_branch "../plugins/multimedia" 3ad0ef9088aecf7b2afc9c9bc34b606f93cdabae master
git_repo_checkout_branch "../plugins/notes" db129498a14ecda0d5147b56fe89e6142af41e22 master
git_repo_checkout_branch "../plugins/overview" 3f88524bde536bba4fbc027fd03cd07aa35071d4 master
git_repo_checkout_branch "../plugins/progress" c7b894f081d490fd7620abf9d5b270e0506f3dcf master
git_repo_checkout_branch "../plugins/qrcode" d0f561713636f40775d87f28a7954e3b5692ca3b master
git_repo_checkout_branch "../plugins/scale" 487cc62320ce9d5c460cbf71213974f24b0f1c69 master
git_repo_checkout_branch "../plugins/simple-overview" 1fd20057083767570665b3eec85eae7c154013f8 master
git_repo_checkout_branch "../plugins/state" 632aa4cfcd2ef02d54de0287f0fbbe1b799eb84e master
git_repo_checkout_branch "../plugins/substeps" 0d859a42c2f1e765f69bb1f44e3dd89797bfd2b6 master
git_repo_checkout_branch "../plugins/sync" 1ec0b4589a50dc60bf3327979df33b87eb261bcf master
git_repo_checkout_branch "../plugins/title" 3a89877acfaf142555a5f5332f647fb3daedba11 master
git_repo_checkout_branch "../plugins/touch" 637c288db5ac704ac29205950256f3b3f1220e1e master
git_repo_checkout_branch "../plugins/vcr" 0afae2611b54f581e31898b11d7527cd76a3deca master
git_repo_checkout_branch "../themes/build-wars" e85cd929dc8aa2fb45afc930368b479b63ca681b master
git_repo_checkout_branch "../themes/fancy" 43b325bf1bdf8b62229e95e7484d9c91fe3bda42 master

# --- all done ---

popd                                                                           2> /dev/null  > /dev/null

